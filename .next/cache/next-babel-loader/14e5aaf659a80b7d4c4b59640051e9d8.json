{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\ni18n // load translation using http -> see /public/locales\n// learn more: https://github.com/i18next/i18next-http-backend\n//.use(Backend)\n// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n// .use(LanguageDetector)\n// pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  lng: 'en',\n  fallbackLng: ['en', 'de'],\n  whitelist: ['en', 'de'],\n  debug: true,\n  resources: {\n    en: {\n      translation: {\n        \"welcome\": \"Welcome to hello world\",\n        \"description\": {\n          \"part2\": \"This is really unbelievable that it loads\"\n        }\n      }\n    }\n  },\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/Users/smbpro/dev/next.js/examples/with-typescript-styled-components/i18n.ts"],"names":["i18n","initReactI18next","use","init","lng","fallbackLng","whitelist","debug","resources","en","translation","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAGA,SAASC,gBAAT,QAAiC,eAAjC;AAEAD,IAAI,CACF;AACA;AACA;AACA;AACA;AACA;AACA;AAPE,CAQDE,GARH,CAQOD,gBARP,EASE;AACA;AAVF,CAWGE,IAXH,CAWQ;AACNC,EAAAA,GAAG,EAAE,IADC;AAEJC,EAAAA,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,CAFT;AAGNC,EAAAA,SAAS,EAAE,CAAC,IAAD,EAAO,IAAP,CAHL;AAIJC,EAAAA,KAAK,EAAE,IAJH;AAKNC,EAAAA,SAAS,EAAE;AACTC,IAAAA,EAAE,EAAE;AACJC,MAAAA,WAAW,EAAE;AACZ,mBAAW,wBADC;AAEZ,uBAAe;AACd,mBAAS;AADK;AAFH;AADT;AADK,GALL;AAeJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AAfX,CAXR;AA+BA,eAAeZ,IAAf","sourcesContent":["import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  // load translation using http -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-http-backend\n  //.use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n\t\tlng: 'en',\n    fallbackLng: ['en', 'de'],\n\t\twhitelist: ['en', 'de'],\n    debug: true,\n\t\tresources: {\n    en: {\n\t\t\t\ttranslation: {\n\t\t\t\t\t\"welcome\": \"Welcome to hello world\",\n\t\t\t\t\t\"description\": {\n\t\t\t\t\t\t\"part2\": \"This is really unbelievable that it loads\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}